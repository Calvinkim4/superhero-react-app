{"version":3,"sources":["components/Home.js","components/SearchCharacter.js","components/Characters.js","components/SearchEvent.js","components/Events.js","components/SearchComic.js","components/ComicList.js","components/Comics.js","components/SingleComic.js","components/SingleEvent.js","components/SingleCharacter.js","App.js","index.js"],"names":["Home","props","react_default","a","createElement","className","src","alt","SearchCharacter","onSubmit","getCharacter","type","name","placeholder","onChange","setCharacter","apiKey","process","Characters","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isCompMounted","state","limit","offset","data","characterName","getCharacters","bind","assertThisInitialized","getBackCharacters","_this2","fetch","concat","then","response","json","setState","results","_this3","event","target","value","_this4","preventDefault","length","components_SearchCharacter","allCharacterNames","map","character","react_router_dom","to","id","key","thumbnail","path","extension","onClick","Component","SearchEvent","getEvents","setTitle","Events","title","getBackEvents","getSpecificEvents","url","URL","params","URLSearchParams","search","slice","append","components_SearchEvent","events","SearchComic","getComics","ComicList","getSpecificComics","getBackComics","components_SearchComic","comics","comic","Comics","components_ComicList","SingleComic","description","match","SingleEvent","SingleCharacter","App","react_router","exact","component","render","components_SingleComic","components_SingleEvent","components_SingleCharacter","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.69fbc639.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Home(props) {\n\n    return (\n        <div>\n            <img className='marvel-logo' src='https://media2.giphy.com/media/10ADhj1QPawFna/giphy.gif?cid=790b76115cc079a96d68734d4973c9b0' alt='marvel logo' />\n        </div>\n    ) \n        \n}\n\nexport default Home;","import React from 'react';\n\nfunction SearchCharacter(props) {\n\n        return (\n            <div>\n                <form className='form' onSubmit={props.getCharacter}>\n                    <label>\n                        <input className='search-input' type='text' name='name' placeholder='Name' onChange={props.setCharacter}/>\n                    </label>\n                </form>\n            </div>\n            ) \n    \n}\n\nexport default SearchCharacter;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchCharacter from './SearchCharacter';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass Characters extends Component {\n    isCompMounted = false;\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 100,\n            offset: -100,\n            data: null,\n            characterName: ''\n        }\n        this.getCharacters = this.getCharacters.bind(this);\n        this.getBackCharacters = this.getBackCharacters.bind(this);\n        this.setCharacter = this.setCharacter.bind(this)\n        this.getCharacter = this.getCharacter.bind(this)\n\n    }\n\n    getCharacters() {\n        fetch(`https://gateway.marvel.com/v1/public/characters?orderBy=name&limit=${this.state.limit}&offset=${this.state.offset + 100}&apikey=${apiKey}`)\n        .then(response => response.json())\n          .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset + 100\n                })\n            })\n    }\n\n    getBackCharacters() {\n        fetch(`https://gateway.marvel.com/v1/public/characters?orderBy=name&limit=${this.state.limit}&offset=${this.state.offset - 100}&apikey=${apiKey}`)\n        .then(response => response.json())\n          .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset - 100\n                })\n            })\n            if (this.state.offset <= 0) {\n                this.setState({\n                    offset: 0\n                 }) \n             }\n    }\n\n    componentDidMount() {\n        this.isCompMounted = true;\n        this.getCharacters();\n    }\n\n    componentWillUnmount() {\n        this.isCompMounted = false;\n    }\n\n    setCharacter(event) {\n        this.setState({\n            characterName: event.target.value\n        })\n    }\n\n    getCharacter(event) {\n        event.preventDefault();\n\n        this.setState({\n            data: null\n        })\n\n        if (this.state.characterName !== '') {\n            fetch(`https://gateway.marvel.com/v1/public/characters?name=${this.state.characterName}&apikey=${apiKey}`)\n                .then(response => response.json())\n                .then(data => {\n                    if (this.isCompMounted) {\n                        this.setState({\n                            data: data.data.results\n                        }) \n                    }\n                    \n                })\n        }\n        \n    }\n\n    render() {\n        if (this.state.data === null) {\n            return <h1>LOADING...</h1>\n        } else {\n            if (this.state.data.length === 0) {\n                return (\n                    <div>\n                        <SearchCharacter getCharacter={this.getCharacter} setCharacter={this.setCharacter}/>\n                        <h1>NO MATCH</h1>\n                    </div>\n                )\n            }\n            let allCharacterNames = this.state.data.map(character => {\n                return (\n                    <Link to={`/Characters/${character.id}`} className='comic' key={character.id}>\n                        <div className='comic-desc'>\n                            <h1>{character.name}</h1>\n                        </div>\n                        <img src={character.thumbnail.path + '.' + character.thumbnail.extension} alt='character' />\n                    </Link>\n                )\n            })\n        \n            if (this.state.offset <= 0) {\n                return (\n                    <div>\n                        <SearchCharacter getCharacter={this.getCharacter} setCharacter={this.setCharacter}/>\n                        <button className='comic-button' onClick={this.getCharacters}>Next</button>\n                        <div className='character-list'>\n                            {allCharacterNames}\n                        </div>\n                        <button className='comic-button' onClick={this.getCharacters}>Next</button>\n                    </div>\n                    \n                )\n            } else {\n                return (\n                    <div>\n                        <SearchCharacter getCharacter={this.getCharacter} setCharacter={this.setCharacter}/>\n                        <button className='comic-button back' onClick={this.getBackCharacters}>Back</button>\n                        <button className='comic-button' onClick={this.getCharacters}>Next</button>\n                        <div className='character-list'>\n                            {allCharacterNames}\n                        </div>\n                        <button className='comic-button back' onClick={this.getBackCharacters}>Back</button>\n                        <button className='comic-button' onClick={this.getCharacters}>Next</button>\n                    </div>\n                    \n                )\n            }\n        }\n        return null;\n\n    }\n}\n\nexport default Characters;","import React from 'react';\n\nfunction SearchEvent(props) {\n    return (\n        <div>\n            <form className='form' onSubmit={props.getEvents}>\n                <label>\n                    <input type='text' name='title' placeholder='Event Title' onChange={props.setTitle}/>\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchEvent;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport SearchEvent from './SearchEvent';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 30,\n            offset: -30,\n            data: null,\n            title: ''\n        }\n\n        this.getEvents = this.getEvents.bind(this);\n        this.getBackEvents = this.getBackEvents.bind(this);\n        this.getSpecificEvents = this.getSpecificEvents.bind(this);\n        this.setTitle = this.setTitle.bind(this);\n    }\n\n    setTitle(event) {\n        this.setState({\n            title: event.target.value\n        })\n    }\n\n    getEvents() {\n        fetch(`https://gateway.marvel.com/v1/public/events?limit=${this.state.limit}&offset=${this.state.offset + 30}&apikey=${apiKey}`)\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset + 30\n            })\n        })\n    }\n\n    getBackEvents() {\n        fetch(`https://gateway.marvel.com/v1/public/events?limit=${this.state.limit}&offset=${this.state.offset - 30}&apikey=${apiKey}`)\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset - 30\n            })\n            if (this.state.offset <= 0) {\n                this.setState({\n                    offset: 0\n                 }) \n             }\n        })\n    }\n\n    getSpecificEvents(event) {\n        event.preventDefault();\n\n        this.setState({\n            data: null\n        })\n\n        if (this.state.title !== '') {\n            let url = new URL (`https://gateway.marvel.com/v1/public/events?limit=${this.state.limit}&offset=${this.state.offset}&apikey=${apiKey}`);\n            let params = new URLSearchParams(url.search.slice(1));\n            params.append('name', this.state.title);\n            url.search = new URLSearchParams(params)\n            fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    data: data.data.results\n                })\n            })\n        }\n        \n\n    }\n\n    componentDidMount() {\n        this.getEvents();\n    }\n\n    render() {\n\n        if (this.state.data === null) {\n            return <h1>LOADING...</h1>\n        } else {\n            if (this.state.data.length === 0) {\n                return (\n                    <div>\n                        <SearchEvent setTitle={this.setTitle} getEvents={this.getSpecificEvents}/>\n                        <h1>NO MATCH</h1>\n                    </div>\n                )\n            }\n            let events = this.state.data.map(event => {\n                return (\n                    <Link to={`/Events/${event.id}`} className='comic' key={event.id}>\n                        <div className='comic-desc'>\n                            <h1>{event.title}</h1>\n                        </div>\n                        <img src={event.thumbnail.path + \".\" + event.thumbnail.extension} alt='event'/>\n                    </Link>\n                )\n            })\n            if (this.state.offset <= 0) {\n                return (\n                    <div>\n                        <SearchEvent setTitle={this.setTitle} getEvents={this.getSpecificEvents}/>\n                        <button className='comic-button' onClick={this.getEvents}>Next</button>\n                        <div className='all-comic-div'>\n                            {events}\n                        </div>\n                        <button className='comic-button' onClick={this.getEvents}>Next</button>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <SearchEvent setTitle={this.setTitle} getEvents={this.getSpecificEvents}/>\n                        <button className='comic-button back' onClick={this.getBackEvents}>Back</button>\n                        <button className='comic-button' onClick={this.getEvents}>Next</button>\n                        <div className='all-comic-div'>\n                            {events}\n                        </div>\n                        <button className='comic-button back' onClick={this.getBackEvents}>Back</button>\n                        <button className='comic-button' onClick={this.getEvents}>Next</button>\n                    </div>\n                )\n            }\n        }\n        \n    }\n}\n\nexport default Events;","import React from 'react';\n\nfunction SearchComic(props) {\n    return (\n        <div>\n            <form onSubmit={props.getComics}>\n                <label>\n                    <input type='text' name='title' placeholder='Comic Title' onChange={props.setTitle}/>\n                </label>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchComic;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchComic from './SearchComic';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass ComicList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 50,\n            offset: -50,\n            data: null,\n            title: ''\n        }\n        this.getComics = this.getComics.bind(this);\n        this.getSpecificComics = this.getSpecificComics.bind(this);\n        this.getBackComics = this.getBackComics.bind(this);\n        this.setTitle = this.setTitle.bind(this);\n\n    }\n\n    setTitle(event) {\n        this.setState({\n            title: event.target.value\n        })\n    }\n\n    getComics() {\n        let url = new URL (`https://gateway.marvel.com/v1/public/comics?limit=${this.state.limit}&offset=${this.state.offset + 50}&apikey=${apiKey}`);\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset + 50\n            })\n        })\n    }\n\n    getBackComics() {\n        let url = new URL (`https://gateway.marvel.com/v1/public/comics?limit=${this.state.limit}&offset=${this.state.offset - 50}&apikey=${apiKey}`);\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                data: data.data.results,\n                offset: this.state.offset - 50\n            })\n            if (this.state.offset <= 0) {\n                this.setState({\n                    offset: 0\n                 }) \n             }\n        })\n    }\n\n    getSpecificComics(event) {\n        event.preventDefault();\n\n        this.setState({\n            data: null\n        })\n\n        if (this.state.title !== '') {\n            let url = new URL (`https://gateway.marvel.com/v1/public/comics?limit=${this.state.limit}&offset=${this.state.offset}&apikey=${apiKey}`);\n            let params = new URLSearchParams(url.search.slice(1));\n            params.append('title', this.state.title);\n            url.search = new URLSearchParams(params)\n            fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    data: data.data.results\n                })\n            }) \n        }\n        \n    }\n\n    componentDidMount() {\n        this.getComics();\n    }\n\n    render () {\n        if (this.state.data === null) {\n            return <h1>LOADING...</h1>\n        } else {\n            if (this.state.data.length === 0) {\n                return (\n                    <div>\n                        <SearchComic setTitle={this.setTitle} getComics={this.getSpecificComics}/>                        \n                        <h1>NO MATCH</h1>\n                    </div>\n                )\n            }\n            let comics = this.state.data.map(comic => {\n                return (\n                    <Link to={`/Comics/${comic.id}`} className='comic' key={comic.id}>\n                        <div className='comic-desc'>\n                            <h1>{comic.title}</h1>\n                        </div>\n                        <img src={comic.thumbnail.path + \".\" + comic.thumbnail.extension} alt='comic'/>\n                    </Link>\n                )\n            })\n\n            if (this.state.offset <= 0) {\n                return (\n                    <div>\n                        <SearchComic setTitle={this.setTitle} getComics={this.getSpecificComics}/>\n                        <button className='comic-button' onClick={this.getComics}>Next</button>\n                        <div className='all-comic-div'>\n                            {comics}\n                        </div>\n                        <button className='comic-button' onClick={this.getComics}>Next</button>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <SearchComic setTitle={this.setTitle} getComics={this.getSpecificComics}/>\n                        <button className='comic-button back' onClick={this.getBackComics}>Back</button>\n                        <button className='comic-button' onClick={this.getComics}>Next</button>\n                        <div className='all-comic-div'>\n                            {comics}\n                        </div>\n                        <button className='comic-button back' onClick={this.getBackComics}>Back</button>\n                        <button className='comic-button' onClick={this.getComics}>Next</button>\n                    </div>\n                )\n            }\n        }\n        \n        return null;\n        \n    }\n}\n\nexport default ComicList;","import React, { Component } from 'react';\nimport ComicList from './ComicList';\n\nclass Comics extends Component {\n\n\n    render() {\n\n        return (\n            <ComicList />\n        )\n    }\n}\n\nexport default Comics;","import React, { Component } from 'react';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass SingleComic extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            title: '',\n            description: '',\n            thumbnail: ''\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params: { id } } } = this.props\n\n        fetch(`https://gateway.marvel.com/v1/public/comics/${id}?apikey=${apiKey}`)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                title: data.data.results[0].title,\n                description: data.data.results[0].description,\n                thumbnail: `${data.data.results[0].thumbnail.path}.${data.data.results[0].thumbnail.extension}`\n            })\n        })\n    }\n    \n    render() {\n\n\n        return(\n            <div className='single-comic-div'>\n                <img src={this.state.thumbnail} alt='comic' />\n                <div className='single-comic-desc'>\n                    <h1>{this.state.title}</h1>\n                    <p>{this.state.description}</p>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default SingleComic;","import React, { Component } from 'react';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass SingleEvent extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            title: '',\n            description: '',\n            thumbnail: ''\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params: { id } } } = this.props\n\n        fetch(`https://gateway.marvel.com/v1/public/events/${id}?apikey=${apiKey}`)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                title: data.data.results[0].title,\n                description: data.data.results[0].description,\n                thumbnail: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension\n            })\n        })\n    }\n    \n    render() {\n\n\n        return(\n            <div className='single-comic-div'>\n                <img src={this.state.thumbnail} alt='comic' />\n                <div className='single-comic-desc'>\n                    <h1>{this.state.title}</h1>\n                    <p>{this.state.description}</p>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nexport default SingleEvent;","import React, { Component } from 'react';\n\nconst apiKey = process.env.REACT_APP_MARVEL_KEY;\n\nclass SingleCharacter extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            title: '',\n            description: '',\n            thumbnail: ''\n        }\n    }\n\n    componentDidMount() {\n        const { match: { params: { id } } } = this.props\n\n        fetch(`https://gateway.marvel.com/v1/public/characters/${id}?apikey=${apiKey}`)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                title: data.data.results[0].name,\n                description: data.data.results[0].description,\n                thumbnail: data.data.results[0].thumbnail.path + '.' + data.data.results[0].thumbnail.extension\n            })\n        })\n    }\n    \n    render() {\n\n\n        return(\n            <div className='single-comic-div'>\n                <img src={this.state.thumbnail} alt='comic' />\n                <div className='single-comic-desc'>\n                    <h1>{this.state.title}</h1>\n                    <p>{this.state.description}</p>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SingleCharacter;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Link, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport Characters from './components/Characters';\nimport Events from './components/Events';\nimport Comics from './components/Comics';\nimport SingleComic from './components/SingleComic';\nimport SingleEvent from './components/SingleEvent';\nimport SingleCharacter from './components/SingleCharacter';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n      <nav>\n        <Link to='/superhero-react-app/'><li>Home</li></Link>\n        <Link to='/superhero-react-app/Characters'><li>Characters</li></Link>\n        <Link to='/superhero-react-app/Events'><li>Events</li></Link>\n        <Link to='/superhero-react-app/Comics'><li>Comics</li></Link>\n      </nav>\n      \n      \n        <main>\n          <Route exact path='/superhero-react-app/' component={Home} />\n          <Route exact path='/superhero-react-app/Characters' component={Characters} />\n          <Route exact path='/superhero-react-app/Events' component={Events} />\n          <Route exact path='/superhero-react-app/Comics' component={Comics} />\n          <Route path='/superhero-react-app/Comics/:id' render={(props) => <SingleComic {...props} />} />\n          <Route path='/superhero-react-app/Events/:id' render={(props) => <SingleEvent {...props} />} />\n          <Route path='/superhero-react-app/Characters/:id' render={(props) => <SingleCharacter {...props} />} />\n\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router\n  } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}